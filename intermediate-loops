// factorial in java
import java.util.Scanner;

public class Factorial {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number to calculate its factorial: ");  
        int number = scanner.nextInt();
        long factorial = calculateFactorial(number); 
        System.out.println("Factorial of " + number + " is: " + factorial);    
        scanner.close();  
    }
     
    public static long calculateFactorial(int n) { 
        if (n == 0) 
            return 1; 
        else 
            return n * calculateFactorial(n - 1);
    } 
}

// calculate electrical bill
import java.util.Scanner;

public class ElectricityBillCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); 
        
        // Get the rate per unit from the user
        System.out.print("Enter the rate per unit of electricity (in rupees): "); 
        double ratePerUnit = scanner.nextDouble();
        
        // Get the total number of units consumed from the user
        System.out.print("Enter the total number of units consumed: ");
        double unitsConsumed = scanner.nextDouble();
        
        // Calculate the electricity bill
        double electricityBill = ratePerUnit * unitsConsumed;
        
        System.out.println("Electricity bill: " + electricityBill + " rupees");
        
        scanner.close();
    }
}

// calculate the average of N number 
import java.util.Scanner;

public class AverageCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the number of elements from the user
        System.out.print("Enter the number of elements: ");
        int n = scanner.nextInt();
        
        // Create an array to store the elements
        double[] numbers = new double[n];
        
        // Get the elements from the user
        System.out.println("Enter the numbers:");
        for (int i = 0; i < n; i++) {
            numbers[i] = scanner.nextDouble();
        }
        
        // Calculate the sum of the numbers
        double sum = 0;
        for (int i = 0; i < n; i++) {
            sum += numbers[i];
        }
        
        // Calculate the average
        double average = sum / n;
        
        System.out.println("Average of the numbers is: " + average);
        
        scanner.close();
    }
}

// calculate discount of products
import java.util.Scanner;

public class DiscountCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the original price of the product from the user
        System.out.print("Enter the original price of the product: ");
        double originalPrice = scanner.nextDouble();
        
        // Get the percentage discount from the user
        System.out.print("Enter the percentage discount: ");
        double discountPercentage = scanner.nextDouble();
        
        // Calculate the discount amount
        double discountAmount = (discountPercentage / 100) * originalPrice;
        
        // Calculate the discounted price
        double discountedPrice = originalPrice - discountAmount;
        
        System.out.println("Discounted amount: " + discountAmount);
        System.out.println("Discounted price: " + discountedPrice);
        
        scanner.close();
    }
}

//calculate diatance between tow ponts 
import java.util.Scanner;

public class DistanceCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the coordinates of the first point from the user
        System.out.println("Enter the coordinates of the first point:");
        System.out.print("x1: ");
        double x1 = scanner.nextDouble();
        System.out.print("y1: ");
        double y1 = scanner.nextDouble();
        
        // Get the coordinates of the second point from the user
        System.out.println("Enter the coordinates of the second point:");
        System.out.print("x2: ");
        double x2 = scanner.nextDouble();
        System.out.print("y2: ");
        double y2 = scanner.nextDouble();
        
        // Calculate the distance between the two points
        double distance = calculateDistance(x1, y1, x2, y2);
        
        System.out.println("Distance between the two points: " + distance);
        
        scanner.close();
    }
    
    public static double calculateDistance(double x1, double y1, double x2, double y2) {
        return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
    }
}

//Calculate Commission Percentage
import java.util.Scanner;

public class CommissionPercentageCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the total sales amount from the user
        System.out.print("Enter the total sales amount: ");
        double totalSalesAmount = scanner.nextDouble();
        
        // Get the commission earned from the user
        System.out.print("Enter the commission earned: ");
        double commissionEarned = scanner.nextDouble();
        
        // Calculate the commission percentage
        double commissionPercentage = (commissionEarned / totalSalesAmount) * 100;
        
        System.out.println("Commission Percentage: " + commissionPercentage + "%");
        
        scanner.close();
    }
}

// power in java

Power In Javapublic class PowerCalculator {
    public static void main(String[] args) {
        double base = 3;
        double exponent = 4;
        
        double result = calculatePower(base, exponent);
        
        System.out.println("Result: " + result);
    }
    
    public static double calculatePower(double base, double exponent) {
        double result = 1;
        
        for (int i = 0; i < exponent; i++) {
            result *= base;
        }
        
        return result;
    }
}

// Calculate Depreciation of Value
import java.util.Scanner;

public class DepreciationCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the initial value, salvage value, and useful life from the user
        System.out.print("Enter the initial value of the asset: ");
        double initialValue = scanner.nextDouble();
        
        System.out.print("Enter the salvage value of the asset: ");
        double salvageValue = scanner.nextDouble();
        
        System.out.print("Enter the useful life of the asset (in years): ");
        int usefulLife = scanner.nextInt();
        
        // Calculate the depreciation
        double depreciation = (initialValue - salvageValue) / usefulLife;
        
        System.out.println("Annual Depreciation: " + depreciation);
        
        scanner.close();
    }
}

//Calculate Batting Average

import java.util.Scanner;

public class BattingAverageCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the total runs scored from the user
        System.out.print("Enter the total runs scored: ");
        int totalRuns = scanner.nextInt();
        
        // Get the total number of times dismissed from the user
        System.out.print("Enter the total number of times dismissed: ");
        int timesDismissed = scanner.nextInt();
        
        // Calculate the batting average
        double battingAverage = calculateBattingAverage(totalRuns, timesDismissed);
        
        System.out.println("Batting Average: " + battingAverage);
        
        scanner.close();
    }
    
    public static double calculateBattingAverage(int totalRuns, int timesDismissed) {
        if (timesDismissed == 0) {
            // Avoid division by zero
            return 0;
        } else {
            return (double) totalRuns / timesDismissed;
        }
    }
}

// Calculate CGPA Java Program

import java.util.Scanner;

public class CGPACalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the number of subjects from the user
        System.out.print("Enter the number of subjects: ");
        int numSubjects = scanner.nextInt();
        
        // Arrays to store grade points and credits of each subject
        double[] gradePoints = new double[numSubjects];
        int[] credits = new int[numSubjects];
        
        // Get grade points and credits for each subject
        for (int i = 0; i < numSubjects; i++) {
            System.out.println("Subject " + (i + 1) + ":");
            System.out.print("Enter grade points: ");
            gradePoints[i] = scanner.nextDouble();
            System.out.print("Enter credits: ");
            credits[i] = scanner.nextInt();
        }
        
        // Calculate total grade points and total credits
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (int i = 0; i < numSubjects; i++) {
            totalGradePoints += gradePoints[i] * credits[i];
            totalCredits += credits[i];
        }
        
        // Calculate CGPA
        double cgpa = totalGradePoints / totalCredits;
        
        System.out.println("CGPA: " + cgpa);
        
        scanner.close();
    }
}
// import java.util.Scanner;

public class CGPACalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the number of subjects from the user
        System.out.print("Enter the number of subjects: ");
        int numSubjects = scanner.nextInt();
        
        // Arrays to store grade points and credits of each subject
        double[] gradePoints = new double[numSubjects];
        int[] credits = new int[numSubjects];
        
        // Get grade points and credits for each subject
        for (int i = 0; i < numSubjects; i++) {
            System.out.println("Subject " + (i + 1) + ":");
            System.out.print("Enter grade points: ");
            gradePoints[i] = scanner.nextDouble();
            System.out.print("Enter credits: ");
            credits[i] = scanner.nextInt();
        }
        
        // Calculate total grade points and total credits
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (int i = 0; i < numSubjects; i++) {
            totalGradePoints += gradePoints[i] * credits[i];
            totalCredits += credits[i];
        }
        
        // Calculate CGPA
        double cgpa = totalGradePoints / totalCredits;
        
        System.out.println("CGPA: " + cgpa);
        
        scanner.close();
    }
}

// Compound Interest Java Program

import java.util.Scanner;

public class CompoundInterestCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the principal amount from the user
        System.out.print("Enter the principal amount: ");
        double principal = scanner.nextDouble();
        
        // Get the annual interest rate from the user
        System.out.print("Enter the annual interest rate (as a percentage): ");
        double annualInterestRate = scanner.nextDouble();
        
        // Get the number of times the interest is compounded per year from the user
        System.out.print("Enter the number of times the interest is compounded per year: ");
        int compoundFrequency = scanner.nextInt();
        
        // Get the time period in years from the user
        System.out.print("Enter the time period in years: ");
        double years = scanner.nextDouble();
        
        // Calculate the compound interest
        double compoundInterest = calculateCompoundInterest(principal, annualInterestRate, compoundFrequency, years);
        
        System.out.println("Compound Interest: " + compoundInterest);
        
        scanner.close();
    }
    
    public static double calculateCompoundInterest(double principal, double annualInterestRate, int compoundFrequency, double years) {
        double rate = annualInterestRate / 100;
        double amount = principal * Math.pow(1 + (rate / compoundFrequency), compoundFrequency * years);
        return amount - principal;
    }
}

// Calculate Average Marks

import java.util.Scanner;

public class AverageMarksCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the number of subjects from the user
        System.out.print("Enter the number of subjects: ");
        int numSubjects = scanner.nextInt();
        
        // Initialize variables
        int totalMarks = 0;
        
        // Get the marks for each subject from the user
        for (int i = 1; i <= numSubjects; i++) {
            System.out.print("Enter the marks for subject " + i + ": ");
            int marks = scanner.nextInt();
            totalMarks += marks;
        }
        
        // Calculate the average marks
        double averageMarks = (double) totalMarks / numSubjects;
        
        System.out.println("Average marks: " + averageMarks);
        
        scanner.close();
    }
}
// sum of N Number

import java.util.Scanner;

public class SumOfNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the value of N from the user
        System.out.print("Enter the value of N: ");
        int N = scanner.nextInt();
        
        // Initialize variables
        int sum = 0;
        
        // Get N numbers from the user and calculate their sum
        for (int i = 1; i <= N; i++) {
            System.out.print("Enter number " + i + ": ");
            int num = scanner.nextInt();
            sum += num;
        }
        
        // Print the sum
        System.out.println("Sum of the " + N + " numbers: " + sum);
        
        scanner.close();
    }
}

//Armstrong Number In Javaimport java.util.Scanner;

public class ArmstrongNumber {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the number from the user
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        
        // Calculate the number of digits
        int numDigits = String.valueOf(number).length();
        
        // Initialize variables
        int originalNumber = number;
        int sum = 0;
        
        // Calculate the sum of the digits raised to the power of the number of digits
        while (number > 0) {
            int digit = number % 10;
            sum += Math.pow(digit, numDigits);
            number /= 10;
        }
        
        // Check if the number is an Armstrong number
        if (sum == originalNumber) {
            System.out.println(originalNumber + " is an Armstrong number.");
        } else {
            System.out.println(originalNumber + " is not an Armstrong number.");
        }
        
        scanner.close();
    }
}

// Find Ncr & Npr

import java.util.Scanner;

public class CombinationPermutationCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the values of N and R from the user
        System.out.print("Enter the value of N: ");
        int N = scanner.nextInt();
        System.out.print("Enter the value of R: ");
        int R = scanner.nextInt();
        
        // Calculate N choose R (Combinations)
        long nCr = calculateCombination(N, R);
        System.out.println("Combinations (N choose R): " + nCr);
        
        // Calculate N permute R (Permutations)
        long nPr = calculatePermutation(N, R);
        System.out.println("Permutations (N permute R): " + nPr);
        
        scanner.close();
    }
    
    public static long calculateCombination(int N, int R) {
        return factorial(N) / (factorial(R) * factorial(N - R));
    }
    
    public static long calculatePermutation(int N, int R) {
        return factorial(N) / factorial(N - R);
    }
    
    public static long factorial(int n) {
        if (n == 0 || n == 1) {
            return 1;
        } else {
            return n * factorial(n - 1);
        }
    }
}

//Reverse A String In Java

import java.util.Scanner;

public class StringReversal {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the string from the user
        System.out.print("Enter a string: ");
        String inputString = scanner.nextLine();
        
        // Method 1: Using a loop
        String reversedString1 = reverseStringUsingLoop(inputString);
        System.out.println("Reversed string using loop: " + reversedString1);
        
        // Method 2: Using StringBuilder
        String reversedString2 = reverseStringUsingStringBuilder(inputString);
        System.out.println("Reversed string using StringBuilder: " + reversedString2);
        
        // Method 3: Using StringBuffer
        String reversedString3 = reverseStringUsingStringBuffer(inputString);
        System.out.println("Reversed string using StringBuffer: " + reversedString3);
        
        scanner.close();
    }
    
    // Method 1: Using a loop
    public static String reverseStringUsingLoop(String str) {
        String reversed = "";
        for (int i = str.length() - 1; i >= 0; i--) {
            reversed += str.charAt(i);
        }
        return reversed;
    }
    
    // Method 2: Using StringBuilder
    public static String reverseStringUsingStringBuilder(String str) {
        return new StringBuilder(str).reverse().toString();
    }
    
    // Method 3: Using StringBuffer
    public static String reverseStringUsingStringBuffer(String str) {
        return new StringBuffer(str).reverse().toString();
    }
}

// Find if a number is palindrome or not

import java.util.Scanner;

public class PalindromeNumber {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Get the number from the user
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        
        // Check if the number is a palindrome
        boolean isPalindrome = checkPalindrome(number);
        
        if (isPalindrome) {
            System.out.println(number + " is a palindrome number.");
        } else {
            System.out.println(number + " is not a palindrome number.");
        }
        
        scanner.close();
    }
    
    public static boolean checkPalindrome(int number) {
        int reversedNumber = 0;
        int originalNumber = number;
        
        // Reverse the number
        while (number > 0) {
            int digit = number % 10;
            reversedNumber = reversedNumber * 10 + digit;
            number /= 10;
        }
        
        // Check if the reversed number is equal to the original number
        return originalNumber == reversedNumber;
    }
}


























